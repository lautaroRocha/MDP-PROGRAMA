
/* AT RULES o reglas de arroba
    que nos permiten extender la funcionalidad
    de CSS
*/

@import url('https://fonts.googleapis.com/css2?family=Bebas+Neue&family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&family=MedievalSharp&family=Roboto+Condensed:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&family=Ubuntu:wght@300;400;500;700&display=swap');


*, *::before, *::after{
    /* reset css */
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}

/* el pseudoelemento raíz
    representa al origen del documento,
    es muy similar a usar el selector de la etiqueta html,
    se suele usar para indicar variables de css
    donde podemos almacenar valores
    asociándolos a una palabra significativa

    --nombreDeVariable : valor
*/

:root{
    --negro : rgb(0, 0, 0);
    --gris : rgba(255, 255, 255, .5);
    --violetaClaro : rgba(194, 153, 232, 0.7);
    --violeta : rgb(60, 6, 110);
    --azulFocus : rgb(11, 85, 243);
    --amarillo : rgb(215, 215, 74);
    --altoDeInput : 2rem;
}

html{
    background-color: black;
    color: white;
    text-align: center;
    font-family: 'Lato', sans-serif;
}

body{
    /* usar una iamagen externa como fondo */
    /* background-image: url(https://img.freepik.com/vector-gratis/nota-papel-sobre-fondo-memphis_53876-99285.jpg); */
    background-image: url('../assets/background.jpg');
    /* 
    vh ---- alto de la pantalla (viewport height)
    vw ---- ancho de la pantalla (viewport width)
    */
    min-height: 100vh;
    min-width: 100%;
    /* a propiedad POSITION nos ayuda a indicar como se comporta un elemento dentro del flujo del documento 
    el valor ABSOLUTE quita a un elemento del flujo por defecto del documento
    */
    position: absolute;
}

.cabecera {
    background-color: rgba(255, 255, 0, 0.488); 
    width: 80%;
    margin: auto;
    margin-top: 2rem; 
}

a{
    color: black;
    font-weight: bold;
    text-decoration: none;
}

/* PSEUDOELEMENTOS son maneras de agregar contenido alrededor de un elemento sin añadir otra etiqueta */

.titulo::before, .titulo::after{
    content: '🚀';
    margin: .5rem;
}


.formulario {
    background-color: var(--violetaClaro);
    width: 70%;
    margin: auto;
    margin-top: 3rem;
    padding: 3rem;
    color: black;
}

/* NO CUMPLE LA CONDICIÖN */
.formulario>input{
    background-color: red;
}

.formulario label{
    font-weight: bolder;
    color: var(--negro);
}

/* con la coma separo selectores para aplicarles las mismss reglas */
.formulario input, .formulario select {
    width: 70%;
    margin-bottom: 1rem;
    height: var(--altoDeInput);
}

/* 
 las PSEUDOCLASES son maneras de extender las posibildades de css, armando selectores que solo se activan cuando se cumple cierta condición (suele estar atada a acciones del usuario)
*/

.formulario input:focus, .formulario select:focus {
    outline: 2px solid var(--azulFocus);
}

button{
    background-color: var(--amarillo);
    padding: .5rem 2rem;
    border: none;
    border-radius: 25px;
    margin-top: 1rem;
    /* la propiedad TRANSITION me deja
    indicar como es la transición de una propiedad
    cuyo valor cambie
    */
    transition: all .3s ease-in-out;

}

button:hover{
    cursor: pointer;
    /* la propiedad TRANSFORM toma una función y deforma a un elemento según lo ingresado */
    transform: scale(1.3);
}


.pie {
    width: 100%;
    background-color: var(--amarillo); 
    position: absolute;
    bottom: 0;    
    height: 3rem;
    color: black;
}